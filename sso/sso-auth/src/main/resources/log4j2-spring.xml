<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="TRACE" monitorInterval="1800">
    <!-- 日志文件目录和压缩文件目录配置, 需要运维根据环境情况设定-->
    <jmxConfigurator/>
    <Properties>
        <Property name="serviceName">auth</Property>
        <Property name="filePath">./logs</Property>
    </Properties>

    <!--先定义所有的appender -->
    <appenders>
        <!--这个输出控制台的配置 -->
        <console name="Console" target="SYSTEM_OUT" follow="false">
            <!--输出日志的格式 -->
            <PatternLayout pattern="%highlight{%date{yyyy-MM-dd HH:mm:ss.SSS} [%traceId] %level [%thread][%file:%line] - %msg%n}" />
        </console>
        <RollingFile name="info-log" fileName="${filePath}/${serviceName}-info.log" filePattern="${filePath}/$${date:yyyy-MM}/${serviceName}-info-%d{yyyy-MM-dd}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <Filters>
                <ThresholdFilter level="ALL" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss:SSS} [${serviceName},%traceId] %p - %l - %m%n" />
            <Policies>
                <!-- 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作 interval，integer型，指定两次封存动作之间的时间间隔;modulate，boolean型，说明是否对封存时间进行调制 -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50MB" />
            </Policies>
        </RollingFile>
        <RollingFile name="error-log" fileName="${filePath}/${serviceName}-error.log" filePattern="${filePath}/$${date:yyyy-MM}/${serviceName}-error-%d{yyyy-MM-dd}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss:SSS} [${serviceName},%traceId] %p - %l - %m%n" />
            <Policies>
                <!-- 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作 interval，integer型，指定两次封存动作之间的时间间隔;modulate，boolean型，说明是否对封存时间进行调制 -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50MB" />
            </Policies>
        </RollingFile>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
        <logger name="org.springframework" level="INFO"></logger>
        <logger name="org.mybatis" level="INFO"></logger>
        <root level="Info">
            <appender-ref ref="Console"/>
            <appender-ref ref="info-log"/>
            <appender-ref ref="error-log"/>
        </root>
    </loggers>
</configuration>